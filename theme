#!/usr/bin/env bb

;; # vi: ft=clojure

(ns theme
  ;; TODO: Read system dark/light setting and use to set automatically
  ;; # theme=`defaults read -g AppleInterfaceStyle` &>/dev/null
  ;; -- then write :set background= in colorscheme.vim file
  ;; TODO: Choose matching BAT_THEME
  (:require [clojure.java.shell :refer [sh]]
            [clojure.edn :as edn]
            [babashka.fs :as fs]))

(def lookup2 (edn/read-string (slurp (fs/file (fs/expand-home "~/src/sand/ts/color-lookup.edn")))))

(defn echo-ctrlseq
  #_(echo-ctrlseq "nord")
  #_(echo-ctrlseq "gruvbox-dark")
  [preset]
  ;; Bare iterm2
  ;; echo -e "\033]1337;SetColors=preset=gruvbox-dark\a"
  #_(sh "echo" "-e" (str "\033]1337;SetColors=preset=" preset bell))
  ;; Local tmux passthru (also works with bare iterm2)
  ;; printf "\ePtmux;\e\e]1337;SetColors=preset=gruvbox-dark\a\e\\"
  ;; echo -e "\033Ptmux;\033\033]1337;SetColors=preset=nord\007\033\\"
  (sh "echo" "-e" (str "\033Ptmux;\033\033]1337;SetColors=preset=" preset "\007\033\\")))

(defn update-nvim-theme
  #_(update-nvim-theme "gruvbox")
  #_(update-nvim-theme "nord")
  [colorscheme]
  ;; nvr -c 'colorscheme gruvbox'
  ;; nvr --remote-send ':colorscheme nord<cr>'
  (sh "nvr" "-c" (str "colorscheme " colorscheme)))

(def vim-color-file
  "The main vimrc will source this file on startup"
  (fs/file (fs/expand-home "~/.config/nvim/colorscheme.vim")))

(defn update-vim-color-file
  #_(update-vim-color-file vim-color-file "nord")
  #_(update-vim-color-file vim-color-file "gruvbox")
  [f vim-theme-name]
  (let [s (str "colorscheme " vim-theme-name)]
    (spit f s)))

(defn -main
  [s]
  ;; TODO: add --help option and print available colorschemes
  (let [{:keys [iterm2-name vim-name]} (lookup2 s)]
    (update-nvim-theme vim-name)
    (update-vim-color-file vim-color-file vim-name)
    ;; FIXME: This control sequence only works if this is called at the
    ;; end:
    (echo-ctrlseq iterm2-name)))

(-main (first *command-line-args*))
